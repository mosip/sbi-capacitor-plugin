name: Publish to NPM
on:
  push:
    branches:
      - develop
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: npm Install
        run: cd mosip-sbi-capacitor && npm install
      - name: Build APK
        working-directory: ./mosip-sbi-capacitor/android
        run: |
          sed -i -e 's/\r$//' ./gradlew
          chmod +x ./gradlew
          ./gradlew build
      - name: Change to root directory
        run: cd ../
      - name: Build
        run: cd mosip-sbi-capacitor && npm run verify
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          package_path: './mosip-sbi-capacitor'
          registry-url: 'https://registry.npmjs.org/'
      - name: Publish package
        run: cd mosip-sbi-capacitor && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  build:
    name: sonar-analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.ORG_KEY }}
        run: |
          cd mosip-sbi-capacitor
          cd android
          chmod +x gradlew
          ./gradlew build sonar --info --warning-mode all

  build-tagging-repo:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.tag }}
          body: |
            ${{ github.event.inputs.body }}
          draft: false
          release: ${{fromJSON(github.event.inputs.pre-release)}}
